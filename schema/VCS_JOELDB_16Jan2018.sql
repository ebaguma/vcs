DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_WELF`(PAP_ID_ INT, ID_ INT)
BEGIN

SELECT ID,PAP_ID,ASSET_NAME, NBR_ASSETS, ASSET_PURPOSE, OTHER_DTL, IS_DELETED, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE
FROM TRN_BIO_PAP_WELF WHERE PAP_ID = PAP_ID_ AND ID = ID_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_HEALTH_ALL`(PAP_ID_ INT)
BEGIN

SELECT ID,PAP_ID,DISEASE,AFFECTED_NO,FIRST_AID,HEALTH_CTR,OTHER_DTL,CREATED_BY,CREATED_DATE,UPDATED_DATE,UPDATED_BY
FROM TRN_BIO_PAP_HEALTH WHERE PAP_ID = PAP_ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_DEL_PAP_HEALTH`(PAP_ID_ INT, ID_ INT)
BEGIN

DELETE FROM TRN_BIO_PAP_HEALTH WHERE PAP_ID = PAP_ID_ AND ID = ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_HEALTH`(PAP_ID_ INT, ID_ INT)
BEGIN

SELECT ID,PAP_ID,DISEASE,AFFECTED_NO,FIRST_AID,HEALTH_CTR,OTHER_DTL,CREATED_BY,CREATED_DATE,UPDATED_DATE,UPDATED_BY
FROM TRN_BIO_PAP_HEALTH WHERE PAP_ID = PAP_ID_ AND ID = ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_INS_PAP_HEALTH`(
PAP_ID_ INT, DISEASE_ VARCHAR(255), AFFECTED_NO_ INT, FIRST_AID_ VARCHAR(255), HEALTH_CTR_ VARCHAR(255), OTHER_DTL_ VARCHAR(500), CREATED_BY_ INT
)
BEGIN

INSERT INTO TRN_BIO_PAP_HEALTH (PAP_ID,DISEASE,AFFECTED_NO,FIRST_AID,HEALTH_CTR,OTHER_DTL,CREATED_BY,CREATED_DATE)
VALUES (PAP_ID_, DISEASE_, AFFECTED_NO_, FIRST_AID_, HEALTH_CTR_, OTHER_DTL_, CREATED_BY_, CURRENT_TIMESTAMP());

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_HEALTH`(
PAP_ID_ INT, DISEASE_ VARCHAR(255), AFFECTED_NO_ INT, FIRST_AID_ VARCHAR(255), HEALTH_CTR_ VARCHAR(255), OTHER_DTL_ VARCHAR(500), UPDATED_BY_ INT
)
BEGIN

UPDATE TRN_BIO_PAP_HEALTH SET PAP_ID = PAP_ID_, DISEASE = DISEASE_, 
AFFECTED_NO = AFFECTED_NO_, FIRST_AID = FIRST_AID_, HEALTH_CTR = HEALTH_CTR_,  
OTHER_DTL = OTHER_DTL_, UPDATED_BY = UPDATED_BY_, UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE PAP_ID = PAP_ID_ AND ID = ID_;
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_LIVE`(PAP_ID_ INT, ID_ INT)
BEGIN

UPDATE TRN_BIO_PAP_LIVE SET ACTIVITY_NAME = ACTIVITY_NAME_, INCOME_CYCLE = INCOME_CYCLE_, 
CYCLE = CYCLE_, OTHER_DTL = OTHER_DTL_, CREATED_BY = CREATED_BY_, UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE ID = ID_ AND PAP_ID = PAP_ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_DEL_PAP_LIVE`(PAP_ID_ INT, ID_ INT)
BEGIN

DELETE FROM TRN_BIO_PAP_LIVE WHERE ID = ID_ AND PAP_ID = PAP_ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_INS_PAP_LIVE`(
PAP_ID_ INT, ACTIVITY_NAME_ VARCHAR(500),INCOME_CYCLE_ INT(30), CYCLE_ VARCHAR(20),OTHER_DTL_ VARCHAR(750),CREATED_BY_ INT
)
BEGIN

INSERT INTO TRN_BIO_PAP_LIVE (PAP_ID,ACTIVITY_NAME,INCOME_CYCLE,CYCLE,OTHER_DTL,IS_DELETED,CREATED_BY,CREATED_DATE)
VALUES (PAP_ID_,ACTIVITY_NAME_,INCOME_CYCLE_,CYCLE_,OTHER_DTL_,'False',CREATED_BY_,CURRENT_TIMESTAMP());

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_LIVE_ALL`(PAP_ID_ INT)
BEGIN

SELECT ID,PAP_ID,ACTIVITY_NAME,INCOME_CYCLE,CYCLE,OTHER_DTL,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE
FROM TRN_BIO_PAP_LIVE WHERE PAP_ID = PAP_ID_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_LIVE`(PAP_ID_ INT, ID_ INT)
BEGIN

SELECT ID,PAP_ID,ACTIVITY_NAME,INCOME_CYCLE,CYCLE,OTHER_DTL,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE
FROM TRN_BIO_PAP_LIVE WHERE ID = ID_ AND PAP_ID = PAP_ID_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_INS_PAP_WELF`(PAP_ID_	INT, ASSET_NAME_ VARCHAR(50), NBR_ASSETS_	INT(20),
ASSET_PURPOSE_	VARCHAR(750), OTHER_DTL_ varchar(500) ,CREATED_BY_	INT)
BEGIN
  
	DECLARE ROWS_ INT;
	
	INSERT INTO TRN_BIO_PAP_WELF (PAP_ID,ASSET_NAME,NBR_ASSETS,ASSET_PURPOSE,OTHER_DTL,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE)
	VALUES (PAP_ID_, ASSET_NAME_, NBR_ASSETS_, ASSET_PURPOSE_, OTHER_DTL_, 'False',CREATED_BY_,CURRENT_TIMESTAMP());
	
	SELECT ROW_COUNT() INTO ROWS_;
	
	SELECT ROWS_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_WELF`(PAP_ID_	INT, ASSET_NAME_	VARCHAR(50), NBR_ASSETS_	INT(20),
ASSET_PURPOSE_	VARCHAR(750), OTHER_DTL_ varchar(500), CREATED_BY_	INT)
BEGIN

DECLARE ROWS_ INT;

UPDATE TRN_BIO_PAP_WELF SET ASSET_NAME = ASSET_NAME_, NBR_ASSETS = NBR_ASSETS_, 
ASSET_PURPOSE = ASSET_PURPOSE_, OTHER_DTL = OTHER_DTL_, IS_DELETED = IS_DELETED_, 
UPDATED_BY = UPDATED_BY_,UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE ID = ID_ AND PAP_ID = PAP_ID_;

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;
	
END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_FAMILY_MBR`(IN `ID_` INT, IN `MBR_NAME_` VARCHAR(100), IN `RLTN_ID_` INT, IN `DOB_` DATE, IN `BIRTH_PLACE_` VARCHAR(20), IN `SEX_` VARCHAR(10), IN `TRIBE_ID_` INT, IN `RELGN_ID_` INT, IN `EDU_LEV_` VARCHAR(20), IN `CSS_` VARCHAR(20), IN `NON_ATT_` VARCHAR(20), IN `RDO_` VARCHAR(20), IN `OTHER_DTL_` VARCHAR(250), IN `UPDATED_BY_` INT)
BEGIN

DECLARE ROWS_ INT;

UPDATE TRN_BIO_PAP_FAMILY SET 
MBR_NAME = MBR_NAME_,
RLTN_ID = RLTN_ID_,
DOB = DOB_,
BIRTH_PLACE = BIRTH_PLACE_,
SEX = SEX_,
TRIBE_ID = TRIBE_ID_,
RELGN_ID = RELGN_ID_,
EDU_LEV = EDU_LEV_,
CSS = CSS_,
NON_ATT = NON_ATT_,
RDO = RDO_,
OTHER_DTL = OTHER_DTL_,
UPDATED_BY = UPDATED_BY_,
UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE ID = ID_;

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_INS_PAP_FAMILY_MBR`(IN `MBR_NAME_` VARCHAR(100), IN `PAP_ID_` INT, IN `RLTN_ID_` INT, IN `DOB_` DATETIME, IN `BIRTH_PLACE_` VARCHAR(20), IN `SEX_` VARCHAR(10), IN `TRIBE_ID_` INT, IN `RELGN_ID_` INT, IN `EDU_LEV_` VARCHAR(20), IN `CSS_` VARCHAR(20), IN `NON_ATT_` VARCHAR(20), IN `RDO_` VARCHAR(20), IN `OTHER_DTL_` VARCHAR(250), IN `CREATED_BY_` INT)
BEGIN

DECLARE ROWS_ INT;

INSERT INTO TRN_BIO_PAP_FAMILY (MBR_NAME,PAP_ID,RLTN_ID,DOB,BIRTH_PLACE,SEX,TRIBE_ID,RELGN_ID,EDU_LEV,CSS,NON_ATT,RDO,OTHER_DTL,IS_DELETED,CREATED_BY,CREATED_DATE)
VALUES (MBR_NAME_, PAP_ID_, RLTN_ID_, DOB_, BIRTH_PLACE_, SEX_, TRIBE_ID_, RELGN_ID_, EDU_LEV_, CSS_, NON_ATT_, RDO_, OTHER_DTL_,'false', CREATED_BY_, CURRENT_TIMESTAMP());

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_FAMILY_ALL`(PAP_ID_ INT)
BEGIN

SELECT ID,MBR_NAME,PAP_ID,RLTN_ID,DOB,BIRTH_PLACE,SEX,TRIBE_ID,RELGN_ID,EDU_LEV,CSS,NON_ATT,RDO,
OTHER_DTL,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE
FROM TRN_BIO_PAP_FAMILY
WHERE IS_DELETED = 'false'
AND PAP_ID = PAP_ID_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_WELF_ALL`(PAP_ID_ INT)
BEGIN


SELECT ID,PAP_ID,ASSET_NAME,NBR_ASSETS,ASSET_PURPOSE,OTHER_DTL,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE
FROM TRN_BIO_PAP_WELF WHERE PAP_ID = PAP_ID_;



END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_FAMILY_LIMIT`(PAP_ID_ INT, OFFSET_ INT, LIMIT_ INT)
BEGIN

SELECT TPF.ID, TPF.MBR_NAME, TPF.PAP_ID, TPF.RLTN_ID, MBR.RELATION, TPF.DOB, 
DATE_FORMAT(FROM_DAYS(DATEDIFF(NOW(), TPF.DOB)), "%Y")+0 AS AGE, 
TPF.BIRTH_PLACE, TPF.SEX, TPF.TRIBE_ID, TPF.RELGN_ID, TPF.EDU_LEV, TPF.CSS, TPF.NON_ATT, TPF.RDO,
TPF.OTHER_DTL, TPF.IS_DELETED
FROM TRN_BIO_PAP_FAMILY TPF
INNER JOIN MST_BIO_RELATION MBR ON TPF.RLTN_ID = MBR.ID
WHERE TPF.IS_DELETED = 'false'
AND TPF.PAP_ID = PAP_ID_
LIMIT OFFSET_,LIMIT_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_FAMILY_MBR`(IN `ID_` INT)
BEGIN

SELECT ID, MBR_NAME, PAP_ID, RLTN_ID, 
DATE_FORMAT(DOB, '%d/%c/%Y') AS DOB, 
DATE_FORMAT(FROM_DAYS(DATEDIFF(NOW(), DOB)), "%Y")+0 AS AGE, 
BIRTH_PLACE, SEX, TRIBE_ID, RELGN_ID, EDU_LEV, CSS, NON_ATT, RDO,
OTHER_DTL, IS_DELETED, UPDATED_BY, UPDATED_DATE, CREATED_BY, CREATED_DATE
FROM TRN_BIO_PAP_FAMILY
WHERE IS_DELETED = 'false'
AND ID = ID_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_DEL_PAP_WELF`()
BEGIN

DECLARE ROWS_ INT;

DELETE FROM TRN_BIO_PAP_WELF WHERE ID = ID_ AND PAP_ID = PAP_ID_;

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_INFO_BASIC`(IN `HHID_` INT, IN `ID_NO_` INT(25), IN `PAP_STATUS_` VARCHAR(20), IN `PAP_TYPE_` VARCHAR(20), IN `RESIDENCE_STATUS_` VARCHAR(20), IN `PAP_NAME_` VARCHAR(100), IN `DOB_` DATE, IN `SEX_` VARCHAR(10), IN `PLOT_REF_` VARCHAR(20), IN `BIRTH_PLACE_` VARCHAR(20), IN `IS_MARRIED_` VARCHAR(5), IN `TRIBE_ID_` INT, IN `RELGN_ID_` INT, IN `OCCUPN_ID_` INT, IN `LIT_LEV_` VARCHAR(20), IN `PAP_STATUS_ID_` INT, IN `PHONE_NO_` INT, IN `OTHR_PHONE_NO_` INT, IN `EMAIL_` VARCHAR(50), IN `INTERVIEWER_` VARCHAR(25), IN `INTERVIEW_DATE_` DATE, IN `UPDATED_BY_` INT)
BEGIN

DECLARE ROWS_ INT;

UPDATE TRN_BIO_PAP_INFO SET
PAP_NAME = PAP_NAME_,
DOB = DOB_,
SEX = SEX_,
ID_NO = ID_NO_,
PAP_STATUS = PAP_STATUS_,
PAP_TYPE = PAP_TYPE_,
RESIDENCE_STATUS = RESIDENCE_STATUS_,
PLOT_REF = PLOT_REF_,
BIRTH_PLACE = BIRTH_PLACE_,
IS_MARRIED = IS_MARRIED_,
TRIBE_ID = TRIBE_ID_,
RELGN_ID = RELGN_ID_,
OCCUPN_ID = OCCUPN_ID_,
LIT_LEV = LIT_LEV_,
PAP_STATUS_ID = PAP_STATUS_ID_,
PHONE_NO = PHONE_NO_,
OTHR_PHONE_NO = OTHR_PHONE_NO_,
EMAIL = EMAIL_,
INTERVIEWER = INTERVIEWER_,
INTERVIEW_DATE = INTERVIEW_DATE_,
UPDATED_BY = UPDATED_BY_,
UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE HHID = HHID_;

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;

END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_UPD_PAP_INFO`(IN `HHID_` INT, IN `PAP_NAME_` VARCHAR(200), IN `PLOT_REF_` VARCHAR(20), IN `DESIGN_` VARCHAR(10), IN `PAP_TYPE_` VARCHAR(11), IN `UPDATED_BY_` INT)
BEGIN

DECLARE ROWS_ INT;

UPDATE TRN_BIO_PAP_INFO SET
PAP_NAME = PAP_NAME_,
PLOT_REF = PLOT_REF_,
DESIGN = DESIGN_,
PAP_TYPE = PAP_TYPE_,
UPDATED_BY = UPDATED_BY_,
UPDATED_DATE = CURRENT_TIMESTAMP()
WHERE HHID = HHID_
AND IS_DELETED = 'false';

SELECT ROW_COUNT() INTO ROWS_;

SELECT ROWS_;


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_INFO`(IN `HHID_` INT)
BEGIN

SELECT
TRN_BIO_PAP_INFO.HHID,
TRN_BIO_PAP_INFO.ID_NO,
TRN_BIO_PAP_INFO.PAP_STATUS,
TRN_BIO_PAP_INFO.PAP_TYPE,
TRN_BIO_PAP_INFO.PAP_NAME,
TRN_BIO_PAP_INFO.PLOT_REF,
TRN_BIO_PAP_INFO.REF_NO,
TRN_BIO_PAP_INFO.LIT_LEV,
TRN_BIO_PAP_INFO.PAP_STATUS_ID,
TRN_BIO_PAP_INFO.DESIGN,
TRN_BIO_PAP_INFO.PROJ_ID,
TRN_BIO_PAP_INFO.INTERVIEWER,
TRN_BIO_PAP_INFO.INTERVIEW_DATE,
TRN_BIO_PAP_INFO.PHOTO
FROM TRN_BIO_PAP_INFO
WHERE HHID = HHID_
AND IS_DELETED = 'false';


END$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`application`@`%` PROCEDURE `USP_GET_PAP_INFO_BASIC`(IN `PROJ_ID_` INT, IN `HHID_` INT)
BEGIN

SELECT HHID,ID_NO,PAP_STATUS,PAP_TYPE,RESIDENCE_STATUS,PAP_NAME,DATE_FORMAT(DOB, '%d/%c/%Y') AS DOB,SEX,PLOT_REF,REF_NO,IS_RESIDENT,BIRTH_PLACE,IS_MARRIED,TRIBE_ID,
RELGN_ID,OCCUPN_ID,LIT_LEV,PAP_STATUS_ID,LPAD(PHONE_NO, 10, 0) AS PHONE_NO,LPAD(OTHR_PHONE_NO, 10, 0) AS OTHR_PHONE_NO,EMAIL,DESIGN,PHOTO,PROJ_ID,IS_DELETED,UPDATED_BY,UPDATED_DATE,CREATED_BY,CREATED_DATE,INTERVIEWER,DATE_FORMAT(INTERVIEW_DATE, '%d/%c/%Y') AS INTERVIEW_DATE
FROM TRN_BIO_PAP_INFO
WHERE PROJ_ID = PROJ_ID_ AND HHID = HHID_
AND IS_DELETED = 'false';



END$$
DELIMITER ;
